{"version":3,"sources":["../../../controllers/theMovieDB/theMovieDB.controller.js"],"names":["reqPro","require","config","deferred","getMovieByID","req","res","next","isAPI","defer","url","app","theMovieDBURL","params","movieID","theMovieDBKey","then","response","send","JSON","parse","resolve","catch","err","console","log","error","reject","promise","getMovieCreditsByImdbID","imdbID","getExternalID","module","exports"],"mappings":"AAAA;;;AAGA;;AACA,IAAMA,SAASC,QAAQ,iBAAR,CAAf;AACA,IAAMC,SAASD,QAAQ,cAAR,CAAf;AACA,IAAME,WAAWF,QAAQ,UAAR,CAAjB;;AAEA;;AAEA,IAAMG,eAAe,SAAfA,YAAe,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAkC;AAAA,QAAjBC,KAAiB,uEAAT,IAAS;;AACnD,QAAIC,cAAJ;AACA,QAAI,CAACD,KAAL,EAAY;AACRC,gBAAQN,UAAR;AACH;AACD,QAAIO,MAAMR,OAAOS,GAAP,CAAWC,aAAX,GAA2B,SAA3B,GAAuCP,IAAIQ,MAAJ,CAAWC,OAAlD,GACN,WADM,GACQZ,OAAOS,GAAP,CAAWI,aAD7B;AAEAf,WAAOU,GAAP,EACKM,IADL,CACU,UAACC,QAAD,EAAc;AAChB,YAAIT,KAAJ,EAAW;AACPF,gBAAIY,IAAJ,CAASC,KAAKC,KAAL,CAAWH,QAAX,CAAT;AACH,SAFD,MAEO;AACH,mBAAOR,MAAMY,OAAN,CAAcF,KAAKC,KAAL,CAAWH,QAAX,CAAd,CAAP;AACH;AACJ,KAPL,EAQKK,KARL,CAQW,UAACC,GAAD,EAAS;AACZC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,YAAIf,KAAJ,EAAW;AACPD,iBAAK,EAACmB,OAAO,KAAKH,GAAb,EAAL;AACH,SAFD,MAEO;AACH,mBAAOd,MAAMkB,MAAN,CAAaJ,GAAb,CAAP;AACH;AACJ,KAfL;AAgBA,QAAI,CAACf,KAAL,EAAY;AACR,eAAOC,MAAMmB,OAAb;AACH;AACJ,CA1BD;;AA4BA,IAAIC,0BAA0B,SAA1BA,uBAA0B,CAACxB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAkC;AAAA,QAAjBC,KAAiB,uEAAT,IAAS;;AAC5D,QAAIC,cAAJ;AACA,QAAI,CAACD,KAAL,EAAY;AACRC,gBAAQN,UAAR;AACH;AACD,QAAIO,MAAMR,OAAOS,GAAP,CAAWC,aAAX,GAA2B,SAA3B,GAAuCP,IAAIQ,MAAJ,CAAWiB,MAAlD,GACN,mBADM,GACgB5B,OAAOS,GAAP,CAAWI,aADrC;AAEAf,WAAOU,GAAP,EACKM,IADL,CACU,UAAUC,QAAV,EAAoB;AACtB,YAAIT,KAAJ,EAAW;AACPF,gBAAIY,IAAJ,CAASC,KAAKC,KAAL,CAAWH,QAAX,CAAT;AACH,SAFD,MAEO;AACH,mBAAOR,MAAMY,OAAN,CAAcF,KAAKC,KAAL,CAAWH,QAAX,CAAd,CAAP;AACH;AACJ,KAPL,EAQKK,KARL,CAQW,UAAUC,GAAV,EAAe;AAClBC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,YAAIf,KAAJ,EAAW;AACPD,iBAAK,EAACmB,OAAO,KAAKH,GAAb,EAAL;AACH,SAFD,MAEO;AACH,mBAAOd,MAAMkB,MAAN,CAAaJ,GAAb,CAAP;AACH;AACJ,KAfL;AAgBA,QAAI,CAACf,KAAL,EAAY;AACR,eAAOC,MAAMmB,OAAb;AACH;AACJ,CA1BD;;AA6BA,IAAIG,gBAAgB,SAAhBA,aAAgB,CAAC1B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAkC;AAAA,QAAjBC,KAAiB,uEAAT,IAAS;;AAClD,QAAIC,cAAJ;AACA,QAAI,CAACD,KAAL,EAAY;AACRC,gBAAQN,UAAR;AACH;AACD,QAAIO,MAAMR,OAAOS,GAAP,CAAWC,aAAX,GAA2B,SAA3B,GAAuCP,IAAIQ,MAAJ,CAAWC,OAAlD,GACN,wBADM,GACqBZ,OAAOS,GAAP,CAAWI,aAD1C;AAEAf,WAAOU,GAAP,EACKM,IADL,CACU,UAAUC,QAAV,EAAoB;AACtB,YAAIT,KAAJ,EAAW;AACPF,gBAAIY,IAAJ,CAASC,KAAKC,KAAL,CAAWH,QAAX,CAAT;AACH,SAFD,MAEO;AACH,mBAAOR,MAAMY,OAAN,CAAcF,KAAKC,KAAL,CAAWH,QAAX,CAAd,CAAP;AACH;AACJ,KAPL,EAQKK,KARL,CAQW,UAAUC,GAAV,EAAe;AAClBC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,YAAIf,KAAJ,EAAW;AACPD,iBAAK,EAACmB,OAAO,KAAKH,GAAb,EAAL;AACH,SAFD,MAEO;AACH,mBAAOd,MAAMkB,MAAN,CAAaJ,GAAb,CAAP;AACH;AACJ,KAfL;AAgBA,QAAI,CAACf,KAAL,EAAY;AACR,eAAOC,MAAMmB,OAAb;AACH;AACJ,CA1BD;;AA4BAI,OAAOC,OAAP,GAAiB;AACb7B,kBAAcA,YADD;AAEbyB,6BAAyBA,uBAFZ;AAGbE,mBAAeA;AAHF,CAAjB","file":"theMovieDB.controller.js","sourcesContent":["/**\n * Created by swapnil on 19/02/18.\n */\n'use strict';\nconst reqPro = require('request-promise');\nconst config = require('../../config');\nconst deferred = require('deferred');\n\n/** @namespace config.app */\n\nconst getMovieByID = (req, res, next, isAPI = true) => {\n    let defer;\n    if (!isAPI) {\n        defer = deferred();\n    }\n    let url = config.app.theMovieDBURL + '/movie/' + req.params.movieID +\n        '?api_key=' + config.app.theMovieDBKey;\n    reqPro(url)\n        .then((response) => {\n            if (isAPI) {\n                res.send(JSON.parse(response));\n            } else {\n                return defer.resolve(JSON.parse(response));\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n            if (isAPI) {\n                next({error: '' + err});\n            } else {\n                return defer.reject(err);\n            }\n        });\n    if (!isAPI) {\n        return defer.promise;\n    }\n};\n\nlet getMovieCreditsByImdbID = (req, res, next, isAPI = true) => {\n    let defer;\n    if (!isAPI) {\n        defer = deferred();\n    }\n    let url = config.app.theMovieDBURL + '/movie/' + req.params.imdbID +\n        '/credits?api_key=' + config.app.theMovieDBKey;\n    reqPro(url)\n        .then(function (response) {\n            if (isAPI) {\n                res.send(JSON.parse(response));\n            } else {\n                return defer.resolve(JSON.parse(response));\n            }\n        })\n        .catch(function (err) {\n            console.log(err);\n            if (isAPI) {\n                next({error: '' + err});\n            } else {\n                return defer.reject(err);\n            }\n        });\n    if (!isAPI) {\n        return defer.promise;\n    }\n};\n\n\nlet getExternalID = (req, res, next, isAPI = true) => {\n    let defer;\n    if (!isAPI) {\n        defer = deferred();\n    }\n    let url = config.app.theMovieDBURL + '/movie/' + req.params.movieID +\n        '/external_ids?api_key=' + config.app.theMovieDBKey;\n    reqPro(url)\n        .then(function (response) {\n            if (isAPI) {\n                res.send(JSON.parse(response));\n            } else {\n                return defer.resolve(JSON.parse(response));\n            }\n        })\n        .catch(function (err) {\n            console.log(err);\n            if (isAPI) {\n                next({error: '' + err});\n            } else {\n                return defer.reject(err);\n            }\n        });\n    if (!isAPI) {\n        return defer.promise;\n    }\n};\n\nmodule.exports = {\n    getMovieByID: getMovieByID,\n    getMovieCreditsByImdbID: getMovieCreditsByImdbID,\n    getExternalID: getExternalID\n};\n"]}