{"version":3,"sources":["../../../controllers/theMovieDB/theMovieDBSearch.controller.js"],"names":["utils","moment","reqPro","require","config","searchMovie","req","res","next","mandatoryFields","checkReqBody","checkMandatoryRequestBody","body","console","log","message","options","method","url","app","theMovieDBURL","qs","page","query","language","api_key","theMovieDBKey","year","format","then","response","json","data","JSON","parse","catch","err","module","exports"],"mappings":"AAAA;AACA;;AAEA;;IAAYA,K;;AACZ;;IAAYC,M;;;;AACZ,IAAMC,SAASC,QAAQ,iBAAR,CAAf;AACA,IAAMC,SAASD,QAAQ,cAAR,CAAf;;AAGA,IAAIE,cAAc,SAAdA,WAAc,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClC;AACA,QAAIC,kBAAkB,CAAC,OAAD,CAAtB;AACA,QAAIC,eAAeV,MAAMW,yBAAN,CAAgCL,IAAIM,IAApC,EAA0CH,eAA1C,CAAnB;AACAI,YAAQC,GAAR,CAAYJ,YAAZ;AACA,QAAIA,aAAaK,OAAb,KAAyB,SAA7B,EAAwC;AACpC,eAAOP,KAAK,EAACO,SAASL,aAAaK,OAAvB,EAAL,CAAP;AACH;;AAED,QAAIC,UAAU;AACVC,gBAAQ,KADE;AAEVC,aAAKd,OAAOe,GAAP,CAAWC,aAAX,GAA2B,eAFtB;AAGVC,YAAI;AACAC,kBAAMhB,IAAIM,IAAJ,CAASU,IAAT,IAAiB,CADvB;AAEAC,mBAAOjB,IAAIM,IAAJ,CAASW,KAFhB;AAGAC,sBAAU,OAHV;AAIAC,qBAASrB,OAAOe,GAAP,CAAWO,aAJpB;AAKAC,kBAAMrB,IAAIM,IAAJ,CAASe,IAAT,IAAkB1B,SAAS2B,MAAT,CAAgB,MAAhB;AALxB,SAHM;AAUVhB,cAAM;AAVI,KAAd;;AAaA,QAAIN,IAAIM,IAAJ,CAASe,IAAb,EAAmB;AACfX,gBAAQW,IAAR,GAAerB,IAAIM,IAAJ,CAASe,IAAxB;AACH;;AAEDzB,WAAOc,OAAP,EACKa,IADL,CACU,UAACC,QAAD,EAAc;AAChBvB,YAAIwB,IAAJ,CAAS;AACLhB,qBAAS,aADJ;AAELiB,kBAAMC,KAAKC,KAAL,CAAWJ,QAAX;AAFD,SAAT;AAIH,KANL,EAOKK,KAPL,CAOW,UAACC,GAAD,EAAS;AACZ5B,aAAK,EAACO,SAAS,KAAKqB,GAAf,EAAL;AACH,KATL;AAUH,CApCD;AAqCAC,OAAOC,OAAP,GAAiB;AACbjC,iBAAaA;AADA,CAAjB","file":"theMovieDBSearch.controller.js","sourcesContent":["'use strict';\n// use -> /api/theMovieDB/....\n\nimport * as utils from '../../services/utils.service';\nimport * as moment from 'moment';\nconst reqPro = require('request-promise');\nconst config = require('../../config');\n\n\nlet searchMovie = (req, res, next) => {\n    // Check for mandatory fields\n    let mandatoryFields = ['query'];\n    let checkReqBody = utils.checkMandatoryRequestBody(req.body, mandatoryFields);\n    console.log(checkReqBody);\n    if (checkReqBody.message !== 'success') {\n        return next({message: checkReqBody.message});\n    }\n\n    let options = {\n        method: 'GET',\n        url: config.app.theMovieDBURL + '/search/movie',\n        qs: {\n            page: req.body.page || 1,\n            query: req.body.query,\n            language: 'en-US',\n            api_key: config.app.theMovieDBKey,\n            year: req.body.year || (moment().format('YYYY'))\n        },\n        body: '{}'\n    };\n\n    if (req.body.year) {\n        options.year = req.body.year;\n    }\n\n    reqPro(options)\n        .then((response) => {\n            res.json({\n                message: 'Movie found',\n                data: JSON.parse(response)\n            });\n        })\n        .catch((err) => {\n            next({message: '' + err});\n        });\n};\nmodule.exports = {\n    searchMovie: searchMovie\n};\n"]}