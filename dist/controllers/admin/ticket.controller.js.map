{"version":3,"sources":["../../../controllers/admin/ticket.controller.js"],"names":["mysqlDetails","utils","getAdminTicketDetails","req","res","next","pool","getConnection","err","connection","message","query","values","mysqlFormat","rows","structAppend","i","length","struct","day","ticketDay","ticketDetails","ticketGroup","ticketName","ticketPrice2D","ticketPrice","ticketPrice3D","push","json","data","release","updateAdminTicketDetails","mandatoryFields","checkReqBody","checkMandatoryRequestBody","body","ticketType","module","exports"],"mappings":"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","file":"ticket.controller.js","sourcesContent":["/**\n * Created by swapnil on 12/02/18.\n */\n\n'use strict';\n\nimport * as mysqlDetails from '../../database/connectMySQL';\nimport * as utils from '../../services/utils.service';\n\nlet getAdminTicketDetails = (req, res, next) => {\n    mysqlDetails.pool.getConnection(function (err, connection) {\n        if (err) {\n            next({\n                message: err\n            });\n        } else {\n            let query = 'SELECT  a.*  FROM ?? a JOIN ?? b ' +\n                'ON a.ticketType = b.ticketType ' +\n                'WHERE a.ticketDay=b.ticketDay ' +\n                'GROUP BY a.ticketID';\n            let values = ['admin_setting_ticket', 'admin_setting_ticket'];\n            query = mysqlDetails.mysqlFormat(query, values);\n            connection.query(query, (err, rows) => {\n                if (err) {\n                    next({\n                        message: err\n                    });\n                } else {\n                    let structAppend = [];\n                    for (let i = 0; i <= rows.length - 5; i++) {\n                        let struct = {\n                            day: rows[i].ticketDay,\n                            ticketDetails: [\n                                {\n                                    ticketGroup: rows[i].ticketGroup,\n                                    ticketName: rows[i].ticketName,\n                                    ticketPrice2D: rows[i].ticketPrice,\n                                    ticketPrice3D: rows[++i].ticketPrice\n                                },\n                                {\n                                    ticketGroup: rows[++i].ticketGroup,\n                                    ticketName: rows[i].ticketName,\n                                    ticketPrice2D: rows[i].ticketPrice,\n                                    ticketPrice3D: rows[++i].ticketPrice\n                                },\n                                {\n                                    ticketGroup: rows[++i].ticketGroup,\n                                    ticketName: rows[i].ticketName,\n                                    ticketPrice2D: rows[i].ticketPrice,\n                                    ticketPrice3D: rows[++i].ticketPrice\n                                }\n                            ]\n                        };\n                        structAppend.push(struct);\n                    }\n                    res.json({\n                        message: 'Successfully fetched ticket details',\n                        data: structAppend\n                    });\n                }\n            });\n        }\n        connection.release();\n    });\n};\n\nlet updateAdminTicketDetails = (req, res, next) => {\n    // Check for mandatory fields\n    let mandatoryFields = ['ticketName', 'ticketType', 'ticketPrice', 'ticketGroup',\n        'ticketDay'];\n    let checkReqBody = utils.checkMandatoryRequestBody(req.body, mandatoryFields);\n    if (checkReqBody.message !== 'success') {\n        return next({message: checkReqBody.message});\n    }\n\n    mysqlDetails.pool.getConnection(function (err, connection) {\n        if (err) {\n            res.json(err);\n        } else {\n            let query = 'UPDATE ?? SET ticketName=?, ticketType=?, ticketPrice=?, ' +\n                'ticketGroup=?, ticketDay=? ' +\n                'where ??=? AND ??=? AND ??=?';\n            let values = ['admin_setting_ticket', req.body.ticketName,\n                req.body.ticketType, req.body.ticketPrice, req.body.ticketGroup,\n                req.body.ticketDay, 'ticketGroup', req.body.ticketGroup, 'ticketType',\n                req.body.ticketType, 'ticketDay', req.body.ticketDay];\n            query = mysqlDetails.mysqlFormat(query, values);\n            connection.query(query, values, function (err, rows) {\n                if (err) {\n                    next({\n                        message: err\n                    });\n                } else {\n                    getAdminTicketDetails(req, res, next);\n                }\n            });\n        }\n        connection.release();\n    });\n};\n\nmodule.exports = {\n    getAdminTicketDetails: getAdminTicketDetails,\n    updateAdminTicketDetails: updateAdminTicketDetails\n};\n"]}