{"version":3,"sources":["../../../controllers/admin/location.controller.js"],"names":["mysqlDetails","utils","getAdminLocationDetails","req","res","next","pool","getConnection","err","connection","message","query","rows","json","data","release","updateAdminLocationDetails","mandatoryFields","checkReqBody","checkMandatoryRequestBody","body","values","locationTheatreName","locationPhysicalAddress","locationMailingAddress","locationID","mysqlFormat","module","exports"],"mappings":"AAAA;;;AAGA;;AAEA;;IAAYA,Y;;AACZ;;IAAYC,K;;;;AAEZ,IAAIC,0BAA0B,SAA1BA,uBAA0B,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC9CL,iBAAaM,IAAb,CAAkBC,aAAlB,CAAgC,UAAUC,GAAV,EAAeC,UAAf,EAA2B;AACvD,YAAID,GAAJ,EAAS;AACLH,iBAAK;AACDK,yBAASF;AADR,aAAL;AAGH,SAJD,MAIO;AACHC,uBAAWE,KAAX,CAAiB,kBAAjB,EAAqC,CAAC,wBAAD,CAArC,EACI,UAACH,GAAD,EAAMI,IAAN,EAAe;AACX,oBAAIJ,GAAJ,EAAS;AACLH,yBAAK;AACDK,iCAASF;AADR,qBAAL;AAGH,iBAJD,MAIO;AACHJ,wBAAIS,IAAJ,CAAS;AACLH,iCAAS,uCADJ;AAELI,8BAAMF,KAAK,CAAL;AAFD,qBAAT;AAIH;AACJ,aAZL;AAaH;AACDH,mBAAWM,OAAX;AACH,KArBD;AAsBH,CAvBD;;AAyBA,IAAIC,6BAA6B,SAA7BA,0BAA6B,CAACb,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjD;AACA,QAAIY,kBAAkB,CAAC,qBAAD,EAAwB,yBAAxB,EAClB,wBADkB,EACQ,YADR,CAAtB;AAEA,QAAIC,eAAejB,MAAMkB,yBAAN,CAAgChB,IAAIiB,IAApC,EAA0CH,eAA1C,CAAnB;AACA,QAAIC,aAAaR,OAAb,KAAyB,SAA7B,EAAwC;AACpC,eAAOL,KAAK,EAACK,SAASQ,aAAaR,OAAvB,EAAL,CAAP;AACH;;AAEDV,iBAAaM,IAAb,CAAkBC,aAAlB,CAAgC,UAAUC,GAAV,EAAeC,UAAf,EAA2B;AACvD,YAAID,GAAJ,EAAS;AACLJ,gBAAIS,IAAJ,CAASL,GAAT;AACH,SAFD,MAEO;AACH,gBAAIG,QAAQ,qEACR,qCADJ;AAEA,gBAAIU,SAAS,CAAC,wBAAD,EAA2BlB,IAAIiB,IAAJ,CAASE,mBAApC,EACTnB,IAAIiB,IAAJ,CAASG,uBADA,EACyBpB,IAAIiB,IAAJ,CAASI,sBADlC,EAET,YAFS,EAEKrB,IAAIiB,IAAJ,CAASK,UAFd,CAAb;AAGAd,oBAAQX,aAAa0B,WAAb,CAAyBf,KAAzB,EAAgCU,MAAhC,CAAR;AACAZ,uBAAWE,KAAX,CAAiBA,KAAjB,EAAwBU,MAAxB,EAAgC,UAAUb,GAAV,EAAeI,IAAf,EAAqB;AACjD,oBAAIJ,GAAJ,EAAS;AACLH,yBAAK;AACDK,iCAASF;AADR,qBAAL;AAGH,iBAJD,MAIO;AACHC,+BAAWE,KAAX,CAAiB,kBAAjB,EAAqC,CAAC,wBAAD,CAArC,EACI,UAACH,GAAD,EAAMI,IAAN,EAAe;AACX,4BAAIJ,GAAJ,EAAS;AACLH,iCAAK;AACDK,yCAASF;AADR,6BAAL;AAGH,yBAJD,MAIO;AACHJ,gCAAIS,IAAJ,CAAS;AACLH,yCAAS,uCADJ;AAELI,sCAAMF,KAAK,CAAL;AAFD,6BAAT;AAIH;AACJ,qBAZL;AAaH;AACJ,aApBD;AAqBH;AACDH,mBAAWM,OAAX;AACH,KAjCD;AAkCH,CA3CD;;AA6CAY,OAAOC,OAAP,GAAiB;AACb1B,6BAAyBA,uBADZ;AAEbc,gCAA4BA;AAFf,CAAjB","file":"location.controller.js","sourcesContent":["/**\n * Created by swapnil on 12/02/18.\n */\n'use strict';\n\nimport * as mysqlDetails from '../../database/connectMySQL';\nimport * as utils from '../../services/utils.service';\n\nlet getAdminLocationDetails = (req, res, next) => {\n    mysqlDetails.pool.getConnection(function (err, connection) {\n        if (err) {\n            next({\n                message: err\n            });\n        } else {\n            connection.query('SELECT * FROM ??', ['admin_setting_location'],\n                (err, rows) => {\n                    if (err) {\n                        next({\n                            message: err\n                        });\n                    } else {\n                        res.json({\n                            message: 'Successfully fetched location details',\n                            data: rows[0]\n                        });\n                    }\n                });\n        }\n        connection.release();\n    });\n};\n\nlet updateAdminLocationDetails = (req, res, next) => {\n    // Check for mandatory fields\n    let mandatoryFields = ['locationTheatreName', 'locationPhysicalAddress',\n        'locationMailingAddress', 'locationID'];\n    let checkReqBody = utils.checkMandatoryRequestBody(req.body, mandatoryFields);\n    if (checkReqBody.message !== 'success') {\n        return next({message: checkReqBody.message});\n    }\n\n    mysqlDetails.pool.getConnection(function (err, connection) {\n        if (err) {\n            res.json(err);\n        } else {\n            let query = 'UPDATE ?? SET locationTheatreName=?, locationPhysicalAddress=?, ' +\n                'locationMailingAddress=? WHERE ??=?';\n            let values = ['admin_setting_location', req.body.locationTheatreName,\n                req.body.locationPhysicalAddress, req.body.locationMailingAddress,\n                'locationID', req.body.locationID];\n            query = mysqlDetails.mysqlFormat(query, values);\n            connection.query(query, values, function (err, rows) {\n                if (err) {\n                    next({\n                        message: err\n                    });\n                } else {\n                    connection.query('SELECT * FROM ??', ['admin_setting_location'],\n                        (err, rows) => {\n                            if (err) {\n                                next({\n                                    message: err\n                                });\n                            } else {\n                                res.json({\n                                    message: 'Successfully updated location details',\n                                    data: rows[0]\n                                });\n                            }\n                        });\n                }\n            });\n        }\n        connection.release();\n    });\n};\n\nmodule.exports = {\n    getAdminLocationDetails: getAdminLocationDetails,\n    updateAdminLocationDetails: updateAdminLocationDetails\n};\n"]}