{"version":3,"sources":["../../../controllers/omdb/omdb.controller.js"],"names":["reqPro","require","config","deferred","getMovieByImdbID","req","res","next","isAPI","defer","url","params","imdbID","app","omdbAPIKey","then","response","send","JSON","parse","resolve","catch","err","console","log","error","reject","promise","module","exports"],"mappings":"AAAA;;;AAGA;;AACA,IAAMA,SAASC,QAAQ,iBAAR,CAAf;AACA,IAAMC,SAASD,QAAQ,cAAR,CAAf;AACA,IAAME,WAAWF,QAAQ,UAAR,CAAjB;;AAEA,IAAMG,mBAAmB,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAgC;AAAA,QAAfC,KAAe,uEAAT,IAAS;;AACrD,QAAIC,cAAJ;AACA,QAAI,CAACD,KAAL,EAAY;AACRC,gBAAQN,UAAR;AACH;AACD,QAAIO,mDAAiDL,IAAIM,MAAJ,CAAWC,MAAhE;AACAF,UAASA,GAAT,wCAA+CR,OAAOW,GAAP,CAAWC,UAA1D;AACAd,WAAOU,GAAP,EACKK,IADL,CACU,UAACC,QAAD,EAAc;AAChB,YAAIR,KAAJ,EAAW;AACPF,gBAAIW,IAAJ,CAASC,KAAKC,KAAL,CAAWH,QAAX,CAAT;AACH,SAFD,MAEO;AACH,mBAAOP,MAAMW,OAAN,CAAcF,KAAKC,KAAL,CAAWH,QAAX,CAAd,CAAP;AACH;AACJ,KAPL,EAQKK,KARL,CAQW,UAACC,GAAD,EAAS;AACZC,gBAAQC,GAAR,CAAYF,GAAZ;AACA,YAAId,KAAJ,EAAW;AACPD,iBAAK,EAACkB,OAAO,KAAKH,GAAb,EAAL;AACH,SAFD,MAEO;AACH,mBAAOb,MAAMiB,MAAN,CAAaJ,GAAb,CAAP;AACH;AACJ,KAfL;AAgBA,QAAI,CAACd,KAAL,EAAY;AACR,eAAOC,MAAMkB,OAAb;AACH;AACJ,CA1BD;;AA4BAC,OAAOC,OAAP,GAAiB;AACbzB,sBAAkBA;AADL,CAAjB","file":"omdb.controller.js","sourcesContent":["/**\n * Created by swapnil on 19/02/18.\n */\n'use strict';\nconst reqPro = require('request-promise');\nconst config = require('../../config');\nconst deferred = require('deferred');\n\nconst getMovieByImdbID = (req, res, next, isAPI=true) => {\n    let defer;\n    if (!isAPI) {\n        defer = deferred();\n    }\n    let url = `http://www.omdbapi.com/?tomatoes=true&i=${req.params.imdbID}`;\n    url = `${url}&plot=full&r=json&r=json&apikey=${config.app.omdbAPIKey}`;\n    reqPro(url)\n        .then((response) => {\n            if (isAPI) {\n                res.send(JSON.parse(response));\n            } else {\n                return defer.resolve(JSON.parse(response));\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n            if (isAPI) {\n                next({error: '' + err});\n            } else {\n                return defer.reject(err);\n            }\n        });\n    if (!isAPI) {\n        return defer.promise;\n    }\n};\n\nmodule.exports = {\n    getMovieByImdbID: getMovieByImdbID\n};\n"]}