{"version":3,"sources":["../app.js"],"names":["express","require","path","logger","cookieParser","bodyParser","index","users","app","use","json","urlencoded","extended","static","join","__dirname","req","res","next","err","Error","status","locals","message","error","get","send","module","exports"],"mappings":"AAAA;;AACA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,SAASF,QAAQ,QAAR,CAAf;AACA,IAAMG,eAAeH,QAAQ,eAAR,CAArB;AACA,IAAMI,aAAaJ,QAAQ,aAAR,CAAnB;;AAEA,IAAIK,QAAQL,QAAQ,gBAAR,CAAZ;AACA,IAAIM,QAAQN,QAAQ,gBAAR,CAAZ;;AAEA,IAAIO,MAAMR,SAAV;;AAEAQ,IAAIC,GAAJ,CAAQN,OAAO,KAAP,CAAR;AACAK,IAAIC,GAAJ,CAAQJ,WAAWK,IAAX,EAAR;AACAF,IAAIC,GAAJ,CAAQJ,WAAWM,UAAX,CAAsB,EAACC,UAAU,KAAX,EAAtB,CAAR;AACAJ,IAAIC,GAAJ,CAAQL,cAAR;AACAI,IAAIC,GAAJ,CAAQT,QAAQa,MAAR,CAAeX,KAAKY,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEAP,IAAIC,GAAJ,CAAQ,GAAR,EAAaH,KAAb;;AAEA;AACAE,IAAIC,GAAJ,CAAQ,UAAUO,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC9B,QAAIC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,QAAIE,MAAJ,GAAa,GAAb;AACAH,SAAKC,GAAL;AACH,CAJD;;AAMA;AACAX,IAAIC,GAAJ,CAAQ,UAAUU,GAAV,EAAeH,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACnC;AACAD,QAAIK,MAAJ,CAAWC,OAAX,GAAqBJ,IAAII,OAAzB;AACAN,QAAIK,MAAJ,CAAWE,KAAX,GAAmBR,IAAIR,GAAJ,CAAQiB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCN,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,QAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAJ,QAAIS,IAAJ,CAAS,OAAT;AACH,CARD;;AAUAC,OAAOC,OAAP,GAAiBpB,GAAjB","file":"app.js","sourcesContent":["'use strict';\nconst express = require('express');\nconst path = require('path');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\n\nlet index = require('./routes/index');\nlet users = require('./routes/users');\n\nlet app = express();\n\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', index);\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n    let err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n});\n\n// error handler\napp.use(function (err, req, res, next) {\n    // set locals, only providing error in development\n    res.locals.message = err.message;\n    res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n    // render the error page\n    res.status(err.status || 500);\n    res.send('error');\n});\n\nmodule.exports = app;\n"]}