{"version":3,"sources":["../../../../build/build/dist/app.js"],"names":["express","require","path","logger","cookieParser","bodyParser","fs","session","config","moment","index","app","use","json","urlencoded","extended","static","join","__dirname","req","res","next","header","setHeader","key","cookie","secure","maxAge","local","toDate","expires","add","cookieMaxAge","secret","resave","saveUninitialized","err","Error","status","locals","message","error","get","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,SAASF,QAAQ,QAAR,CAAb;AACA,IAAIG,eAAeH,QAAQ,eAAR,CAAnB;AACA,IAAII,aAAaJ,QAAQ,aAAR,CAAjB;AACA,IAAIK,KAAKL,QAAQ,IAAR,CAAT;AACA,IAAIM,UAAUN,QAAQ,iBAAR,CAAd;AACA,IAAIO,SAASP,QAAQ,UAAR,CAAb;AACA,IAAIQ,SAASR,QAAQ,QAAR,CAAb;AACA,IAAIS,QAAQT,QAAQ,gBAAR,CAAZ;;AAEA,IAAIU,MAAMX,SAAV;AACAW,IAAIC,GAAJ,CAAQT,OAAO,KAAP,CAAR;AACAQ,IAAIC,GAAJ,CAAQP,WAAWQ,IAAX,EAAR;AACAF,IAAIC,GAAJ,CAAQP,WAAWS,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAJ,IAAIC,GAAJ,CAAQR,cAAR;AACAO,IAAIC,GAAJ,CAAQZ,QAAQgB,MAAR,CAAed,KAAKe,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AACAP,IAAIC,GAAJ,CAAQ,UAAUO,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC9BD,QAAIE,MAAJ,CAAW,eAAX,EAA4B,8CAA5B;AACAF,QAAIE,MAAJ,CAAW,QAAX,EAAqB,UAArB;AACAF,QAAIE,MAAJ,CAAW,6BAAX,EAA0C,uBAA1C;AACAF,QAAIE,MAAJ,CAAW,kCAAX,EAA+C,IAA/C;AACAF,QAAIG,SAAJ,CAAc,8BAAd,EAA8C,wBAA9C;AACAH,QAAIE,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACAD;AACH,CARD;;AAUA;AACA;;AAEAV,IAAIC,GAAJ,CAAQL,QAAQ;AACZiB,SAAK,SADO;AAEZC,YAAQ;AACJC,gBAAQ,KADJ;AAEJC,gBAAQlB,SAASmB,KAAT,GAAiBC,MAAjB,EAFJ;AAGJC,iBAASrB,SAASsB,GAAT,CAAavB,OAAOG,GAAP,CAAWqB,YAAxB,EAAsC,KAAtC,EAA6CJ,KAA7C,GAAqDC,MAArD;AAHL,KAFI;AAOZI,YAAQ,QAPI;AAQZC,YAAQ,KARI;AASZC,uBAAmB;AATP,CAAR,CAAR;;AAYAxB,IAAIC,GAAJ,CAAQ,MAAR,EAAgBF,KAAhB;;AAEA;AACAC,IAAIC,GAAJ,CAAQ,UAAUO,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC9B,QAAIe,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,QAAIE,MAAJ,GAAa,GAAb;AACAjB,SAAKe,GAAL;AACH,CAJD;;AAMA;AACAzB,IAAIC,GAAJ,CAAQ,UAAUwB,GAAV,EAAejB,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACnC;AACAD,QAAImB,MAAJ,CAAWC,OAAX,GAAqBJ,IAAII,OAAzB;AACApB,QAAImB,MAAJ,CAAWE,KAAX,GAAmBtB,IAAIR,GAAJ,CAAQ+B,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCN,GAAvC,GAA6C,EAAhE;;AAEA;AACAhB,QAAIkB,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAlB,QAAIP,IAAJ,CAAS,EAAE4B,OAAOL,GAAT,EAAT;AACH,CARD;;AAUAO,OAAOC,OAAP,GAAiBjC,GAAjB;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["'use strict';\n\nvar express = require('express');\nvar path = require('path');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar fs = require('fs');\nvar session = require('express-session');\nvar config = require('./config');\nvar moment = require('moment');\nvar index = require('./routes/index');\n\nvar app = express();\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use(function (req, res, next) {\n    res.header('Cache-Control', 'private, no-cache, no-store, must-revalidate');\n    res.header('Pragma', 'no-cache');\n    res.header('Access-Control-Allow-Origin', 'http://localhost:9003');\n    res.header('Access-Control-Allow-Credentials', true);\n    res.setHeader('Access-Control-Allow-Methods', 'POST, GET, PUT, DELETE');\n    res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n    next();\n});\n\n// expires: moment().add(5, 'hours').add(30 + config.app.cookieMaxAge, 'minutes')\n//     .local().toDate()\n\napp.use(session({\n    key: 'userSID',\n    cookie: {\n        secure: false,\n        maxAge: moment().local().toDate(),\n        expires: moment().add(config.app.cookieMaxAge, 'day').local().toDate()\n    },\n    secret: 'qwerty',\n    resave: false,\n    saveUninitialized: false\n}));\n\napp.use('/api', index);\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n    var err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n});\n\n// error handler\napp.use(function (err, req, res, next) {\n    // set locals, only providing error in development\n    res.locals.message = err.message;\n    res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n    // render the error page\n    res.status(err.status || 500);\n    res.json({ error: err });\n});\n\nmodule.exports = app;\n//# sourceMappingURL=app.js.map\n//# sourceMappingURL=app.js.map\n//# sourceMappingURL=app.js.map\n//# sourceMappingURL=app.js.map"]}